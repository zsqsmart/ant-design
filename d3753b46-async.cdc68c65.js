(("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd=("undefined"!=typeof globalThis?globalThis:self).makoChunk_antd||[]).push([["d3753b46"],{d3753b46:function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return o;}}),d("dcfb979a");let o=[{value:"A simple and compact dialog used for asking for user confirmation.",paraId:0,tocIndex:0},{value:"The difference with the ",paraId:1,tocIndex:0},{value:"confirm",paraId:1,tocIndex:0},{value:" modal dialog is that it's more lightweight than the static popped full-screen confirm modal.",paraId:1,tocIndex:0},{value:"Common props ref\uFF1A",paraId:2,tocIndex:12},{value:"Common props",paraId:3,tocIndex:12},{value:"Param",paraId:4,tocIndex:12},{value:"Description",paraId:4,tocIndex:12},{value:"Type",paraId:4,tocIndex:12},{value:"Default value",paraId:4,tocIndex:12},{value:"Version",paraId:4,tocIndex:12},{value:"cancelButtonProps",paraId:4,tocIndex:12},{value:"The cancel button props",paraId:4,tocIndex:12},{value:"ButtonProps",paraId:5,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"cancelText",paraId:4,tocIndex:12},{value:"The text of the Cancel button",paraId:4,tocIndex:12},{value:"string",paraId:4,tocIndex:12},{value:"Cancel",paraId:4,tocIndex:12},{value:"disabled",paraId:4,tocIndex:12},{value:"Whether show popconfirm when click its childrenNode",paraId:4,tocIndex:12},{value:"boolean",paraId:4,tocIndex:12},{value:"false",paraId:4,tocIndex:12},{value:"icon",paraId:4,tocIndex:12},{value:"Customize icon of confirmation",paraId:4,tocIndex:12},{value:"ReactNode",paraId:4,tocIndex:12},{value:"<ExclamationCircle />",paraId:4,tocIndex:12},{value:"okButtonProps",paraId:4,tocIndex:12},{value:"The ok button props",paraId:4,tocIndex:12},{value:"ButtonProps",paraId:6,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"okText",paraId:4,tocIndex:12},{value:"The text of the Confirm button",paraId:4,tocIndex:12},{value:"string",paraId:4,tocIndex:12},{value:"OK",paraId:4,tocIndex:12},{value:"okType",paraId:4,tocIndex:12},{value:"Button ",paraId:4,tocIndex:12},{value:"type",paraId:4,tocIndex:12},{value:" of the Confirm button",paraId:4,tocIndex:12},{value:"string",paraId:4,tocIndex:12},{value:"primary",paraId:4,tocIndex:12},{value:"showCancel",paraId:4,tocIndex:12},{value:"Show cancel button",paraId:4,tocIndex:12},{value:"boolean",paraId:4,tocIndex:12},{value:"true",paraId:4,tocIndex:12},{value:"4.18.0",paraId:4,tocIndex:12},{value:"title",paraId:4,tocIndex:12},{value:"The title of the confirmation box",paraId:4,tocIndex:12},{value:"ReactNode | () => ReactNode",paraId:4,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"description",paraId:4,tocIndex:12},{value:"The description of the confirmation box title",paraId:4,tocIndex:12},{value:"ReactNode | () => ReactNode",paraId:4,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"5.1.0",paraId:4,tocIndex:12},{value:"onCancel",paraId:4,tocIndex:12},{value:"A callback of cancel",paraId:4,tocIndex:12},{value:"function(e)",paraId:4,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"onConfirm",paraId:4,tocIndex:12},{value:"A callback of confirmation",paraId:4,tocIndex:12},{value:"function(e)",paraId:4,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"onPopupClick",paraId:4,tocIndex:12},{value:"A callback of popup click",paraId:4,tocIndex:12},{value:"function(e)",paraId:4,tocIndex:12},{value:"-",paraId:4,tocIndex:12},{value:"5.5.0",paraId:4,tocIndex:12},{value:"Property",paraId:7},{value:"Description",paraId:7},{value:"Type",paraId:7},{value:"Default",paraId:7},{value:"Version",paraId:7},{value:"align",paraId:7},{value:"This value will be merged into placement's config, please refer to the settings ",paraId:7},{value:"dom-align",paraId:7},{value:"object",paraId:7},{value:"-",paraId:7},{value:"arrow",paraId:7},{value:"Change arrow's visible state and change whether the arrow is pointed at the center of target.",paraId:7},{value:"boolean | { pointAtCenter: boolean }",paraId:7},{value:"true",paraId:7},{value:"5.2.0",paraId:7},{value:"autoAdjustOverflow",paraId:7},{value:"Whether to adjust popup placement automatically when popup is off screen",paraId:7},{value:"boolean",paraId:7},{value:"true",paraId:7},{value:"color",paraId:7},{value:"The background color",paraId:7},{value:"string",paraId:7},{value:"-",paraId:7},{value:"4.3.0",paraId:7},{value:"defaultOpen",paraId:7},{value:"Whether the floating tooltip card is open by default",paraId:7},{value:"boolean",paraId:7},{value:"false",paraId:7},{value:"4.23.0",paraId:7},{value:"destroyTooltipOnHide",paraId:7},{value:"Whether destroy tooltip when hidden",paraId:7},{value:"boolean",paraId:7},{value:"false",paraId:7},{value:"fresh",paraId:7},{value:"Tooltip will cache content when it is closed by default. Setting this property will always keep updating",paraId:7},{value:"boolean",paraId:7},{value:"false",paraId:7},{value:"5.10.0",paraId:7},{value:"getPopupContainer",paraId:7},{value:"The DOM container of the tip, the default behavior is to create a ",paraId:7},{value:"div",paraId:7},{value:" element in ",paraId:7},{value:"body",paraId:7},{value:"(triggerNode: HTMLElement) => HTMLElement",paraId:7},{value:"() => document.body",paraId:7},{value:"mouseEnterDelay",paraId:7},{value:"Delay in seconds, before tooltip is shown on mouse enter",paraId:7},{value:"number",paraId:7},{value:"0.1",paraId:7},{value:"mouseLeaveDelay",paraId:7},{value:"Delay in seconds, before tooltip is hidden on mouse leave",paraId:7},{value:"number",paraId:7},{value:"0.1",paraId:7},{value:"overlayClassName",paraId:7},{value:"Class name of the tooltip card",paraId:7},{value:"string",paraId:7},{value:"-",paraId:7},{value:"overlayStyle",paraId:7},{value:"Style of the tooltip card",paraId:7},{value:"React.CSSProperties",paraId:7},{value:"-",paraId:7},{value:"overlayInnerStyle",paraId:7},{value:"Style of the tooltip inner content",paraId:7},{value:"React.CSSProperties",paraId:7},{value:"-",paraId:7},{value:"placement",paraId:7},{value:"The position of the tooltip relative to the target, which can be one of ",paraId:7},{value:"top",paraId:7},{value:" ",paraId:7},{value:"left",paraId:7},{value:" ",paraId:7},{value:"right",paraId:7},{value:" ",paraId:7},{value:"bottom",paraId:7},{value:" ",paraId:7},{value:"topLeft",paraId:7},{value:" ",paraId:7},{value:"topRight",paraId:7},{value:" ",paraId:7},{value:"bottomLeft",paraId:7},{value:" ",paraId:7},{value:"bottomRight",paraId:7},{value:" ",paraId:7},{value:"leftTop",paraId:7},{value:" ",paraId:7},{value:"leftBottom",paraId:7},{value:" ",paraId:7},{value:"rightTop",paraId:7},{value:" ",paraId:7},{value:"rightBottom",paraId:7},{value:"string",paraId:7},{value:"top",paraId:7},{value:"trigger",paraId:7},{value:"Tooltip trigger mode. Could be multiple by passing an array",paraId:7},{value:"hover",paraId:7},{value:" | ",paraId:7},{value:"focus",paraId:7},{value:" | ",paraId:7},{value:"click",paraId:7},{value:" | ",paraId:7},{value:"contextMenu",paraId:7},{value:" | Array<string>",paraId:7},{value:"hover",paraId:7},{value:"open",paraId:7},{value:"Whether the floating tooltip card is open or not. Use ",paraId:7},{value:"visible",paraId:7},{value:" under 4.23.0 (",paraId:7},{value:"why?",paraId:8},{value:")",paraId:7},{value:"boolean",paraId:7},{value:"false",paraId:7},{value:"4.23.0",paraId:7},{value:"zIndex",paraId:7},{value:"Config ",paraId:7},{value:"z-index",paraId:7},{value:" of Tooltip",paraId:7},{value:"number",paraId:7},{value:"-",paraId:7},{value:"onOpenChange",paraId:7},{value:"Callback executed when visibility of the tooltip card is changed",paraId:7},{value:"(open: boolean) => void",paraId:7},{value:"-",paraId:7},{value:"4.23.0",paraId:7},{value:"findDOMNode is deprecated",paraId:9},{value:"This is due to the implementation of ",paraId:10,tocIndex:16},{value:"rc-trigger",paraId:10,tocIndex:16},{value:". ",paraId:10,tocIndex:16},{value:"rc-trigger",paraId:10,tocIndex:16},{value:" forces children to accept ref, otherwise it will fall back to findDOMNode, so children need to be native html tags. If not, you need to use ",paraId:10,tocIndex:16},{value:"React.forwardRef",paraId:10,tocIndex:16},{value:" transparently passes ",paraId:10,tocIndex:16},{value:"ref",paraId:10,tocIndex:16},{value:" to native html tags.",paraId:10,tocIndex:16},{value:"findDOMNode is deprecated",paraId:11,tocIndex:16},{value:" reproduce: ",paraId:11,tocIndex:16},{value:"https://codesandbox.io/p/sandbox/finddomnode-c5hy96",paraId:11,tocIndex:16},{value:"Using ",paraId:11,tocIndex:16},{value:"forwardRef",paraId:11,tocIndex:16},{value:" to fix: ",paraId:11,tocIndex:16},{value:"https://codesandbox.io/p/sandbox/no-finddomnode-warning-forked-gdxczs",paraId:11,tocIndex:16},{value:"Please ensure that the child node of ",paraId:12,tocIndex:17},{value:"Popconfirm",paraId:12,tocIndex:17},{value:" accepts ",paraId:12,tocIndex:17},{value:"onMouseEnter",paraId:12,tocIndex:17},{value:", ",paraId:12,tocIndex:17},{value:"onMouseLeave",paraId:12,tocIndex:17},{value:", ",paraId:12,tocIndex:17},{value:"onFocus",paraId:12,tocIndex:17},{value:", ",paraId:12,tocIndex:17},{value:"onClick",paraId:12,tocIndex:17},{value:" events.",paraId:12,tocIndex:17}];}}]);